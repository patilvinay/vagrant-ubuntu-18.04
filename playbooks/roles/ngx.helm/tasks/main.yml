---

- name: Kubeconfig path
  debug: msg={{ lookup('env','KUBECONFIG') }}

- name: Setting Kube Context
  shell: kubectl config use-context {{ helm_context }}
  become: vagrant
 
- name: "Checking name space {{ helm_ns }} exists"
  shell: kubectl get ns | grep  "{{ helm_ns }}" | wc -w
  register: result
- debug: 
     #var:   result.stdout_lines
     msg: "{{ result.stdout_lines }}"

- name: "Creating name space {{ helm_ns }} "
  shell: "kubectl create ns {{ helm_ns }}"
  when:  result.stdout_lines[0]  ==  "0"

- name: "Labeling the namespace {{ helm_ns }} istio-injection=enabled"
  shell: "kubectl label ns {{ helm_ns }} istio-injection=enabled"
  when:  result.stdout_lines[0]  ==  "0"

- name: Checking if helm already installed
  shell: helm list --namespace="{{ helm_ns }}" | grep  "{{ app_name }}" | wc -w
  register: result
  become: vagrant 
- set_fact: helm_installed="{{ result.stdout_lines[0] }}"
- debug: 
     msg:   "{{ helm_installed }}"
     #msg: "{{ chart_path }}"
# - debug: 
#      msg:   "{{ result.stdout_lines[0] }}"
#      #msg: "{{ chart_path }}"

- name: run Helm uninstall
  shell: "helm uninstall {{ app_name }} --namespace={{ helm_ns }}"
  become: vagrant 
  when: helm_installed  !=  "0"

- name: run Helm install
  shell: "helm install  {{ app_name }} {{ chart_path }} --namespace={{ helm_ns }}"
  register: result
  become: vagrant 
  #when: result.stdout_lines[0]  ==  "0"